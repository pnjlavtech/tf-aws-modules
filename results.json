{
	"results": [
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-ec2-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/ec2/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.eks",
			"location": {
				"filename": "git::https:/github.com/terraform-aws-modules/terraform-aws-eks?ref=50cb230c8a1793f5ef4cc52c4c789b656b141168/node_groups.tf",
				"start_line": 247,
				"end_line": 247
			}
		},
		{
			"rule_id": "AVD-AWS-0038",
			"long_id": "aws-eks-enable-control-plane-logging",
			"rule_description": "EKS Clusters should have cluster control plane logging turned on",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for the EKS control plane",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/eks/enable-control-plane-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#enabled_cluster_log_types"
			],
			"description": "Control plane controller manager logging is not enabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "module.eks",
			"location": {
				"filename": "git::https:/github.com/terraform-aws-modules/terraform-aws-eks?ref=50cb230c8a1793f5ef4cc52c4c789b656b141168/main.tf",
				"start_line": 35,
				"end_line": 187
			}
		},
		{
			"rule_id": "AVD-AWS-0038",
			"long_id": "aws-eks-enable-control-plane-logging",
			"rule_description": "EKS Clusters should have cluster control plane logging turned on",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "Logging provides valuable information about access and usage",
			"resolution": "Enable logging for the EKS control plane",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/eks/enable-control-plane-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#enabled_cluster_log_types"
			],
			"description": "Control plane scheduler logging is not enabled.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "module.eks",
			"location": {
				"filename": "git::https:/github.com/terraform-aws-modules/terraform-aws-eks?ref=50cb230c8a1793f5ef4cc52c4c789b656b141168/main.tf",
				"start_line": 35,
				"end_line": 187
			}
		},
		{
			"rule_id": "AVD-AWS-0040",
			"long_id": "aws-eks-no-public-cluster-access",
			"rule_description": "EKS Clusters should have the public access disabled",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "EKS can be access from the internet",
			"resolution": "Don't enable public access to EKS Clusters",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/eks/no-public-cluster-access/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#endpoint_public_access"
			],
			"description": "Public cluster access is enabled.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.eks",
			"location": {
				"filename": "git::https:/github.com/terraform-aws-modules/terraform-aws-eks?ref=50cb230c8a1793f5ef4cc52c4c789b656b141168/main.tf",
				"start_line": 69,
				"end_line": 69
			}
		},
		{
			"rule_id": "AVD-AWS-0041",
			"long_id": "aws-eks-no-public-cluster-access-to-cidr",
			"rule_description": "EKS cluster should not have open CIDR range for public access",
			"rule_provider": "aws",
			"rule_service": "eks",
			"impact": "EKS can be accessed from the internet",
			"resolution": "Don't enable public access to EKS Clusters",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/eks/no-public-cluster-access-to-cidr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/eks_cluster#vpc_config"
			],
			"description": "Cluster allows access from a public CIDR: 0.0.0.0/0.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.eks",
			"location": {
				"filename": "git::https:/github.com/terraform-aws-modules/terraform-aws-eks?ref=50cb230c8a1793f5ef4cc52c4c789b656b141168/main.tf",
				"start_line": 70,
				"end_line": 70
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'elasticloadbalancing:DescribeTags' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.eks_alb_iam_policy",
			"location": {
				"filename": "/github/workspace/eks/iam.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'iam:CreateServiceLinkedRole' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.eks_alb_iam_policy",
			"location": {
				"filename": "/github/workspace/eks/iam.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'elasticloadbalancing:SetWebAcl' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.eks_alb_iam_policy",
			"location": {
				"filename": "/github/workspace/eks/iam.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'elasticloadbalancing:RegisterTargets' on wildcarded resource 'arn:aws:elasticloadbalancing:*:*:targetgroup/*/*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.eks_alb_iam_policy",
			"location": {
				"filename": "/github/workspace/eks/iam.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'elasticloadbalancing:ModifyLoadBalancerAttributes' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.eks_alb_iam_policy",
			"location": {
				"filename": "/github/workspace/eks/iam.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'elasticloadbalancing:AddTags' on wildcarded resource 'arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.eks_alb_iam_policy",
			"location": {
				"filename": "/github/workspace/eks/iam.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'elasticloadbalancing:AddTags' on wildcarded resource 'arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.eks_alb_iam_policy",
			"location": {
				"filename": "/github/workspace/eks/iam.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'elasticloadbalancing:AddTags' on wildcarded resource 'arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.eks_alb_iam_policy",
			"location": {
				"filename": "/github/workspace/eks/iam.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'elasticloadbalancing:AddTags' on wildcarded resource 'arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.eks_alb_iam_policy",
			"location": {
				"filename": "/github/workspace/eks/iam.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'elasticloadbalancing:AddTags' on wildcarded resource 'arn:aws:elasticloadbalancing:*:*:targetgroup/*/*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.eks_alb_iam_policy",
			"location": {
				"filename": "/github/workspace/eks/iam.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'elasticloadbalancing:AddTags' on wildcarded resource 'arn:aws:elasticloadbalancing:*:*:targetgroup/*/*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.eks_alb_iam_policy",
			"location": {
				"filename": "/github/workspace/eks/iam.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'elasticloadbalancing:AddTags' on wildcarded resource 'arn:aws:elasticloadbalancing:*:*:targetgroup/*/*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.eks_alb_iam_policy",
			"location": {
				"filename": "/github/workspace/eks/iam.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'elasticloadbalancing:CreateListener' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.eks_alb_iam_policy",
			"location": {
				"filename": "/github/workspace/eks/iam.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'elasticloadbalancing:CreateLoadBalancer' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.eks_alb_iam_policy",
			"location": {
				"filename": "/github/workspace/eks/iam.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:AuthorizeSecurityGroupIngress' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.eks_alb_iam_policy",
			"location": {
				"filename": "/github/workspace/eks/iam.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:CreateTags' on wildcarded resource 'arn:aws:ec2:*:*:security-group/*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.eks_alb_iam_policy",
			"location": {
				"filename": "/github/workspace/eks/iam.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:CreateTags' on wildcarded resource 'arn:aws:ec2:*:*:security-group/*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.eks_alb_iam_policy",
			"location": {
				"filename": "/github/workspace/eks/iam.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:CreateSecurityGroup' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.eks_alb_iam_policy",
			"location": {
				"filename": "/github/workspace/eks/iam.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:AuthorizeSecurityGroupIngress' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.eks_alb_iam_policy",
			"location": {
				"filename": "/github/workspace/eks/iam.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'cognito-idp:DescribeUserPoolClient' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.eks_alb_iam_policy",
			"location": {
				"filename": "/github/workspace/eks/iam.tf",
				"start_line": 4,
				"end_line": 4
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'secretsmanager:GetResourcePolicy'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.eks_external_secrets_iam_policy",
			"location": {
				"filename": "/github/workspace/eks/iam.tf",
				"start_line": 240,
				"end_line": 240
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'secretsmanager:GetResourcePolicy' on wildcarded resource 'arn:aws:secretsmanager:*:*:secret:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.eks_external_secrets_iam_policy",
			"location": {
				"filename": "/github/workspace/eks/iam.tf",
				"start_line": 240,
				"end_line": 240
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'secretsmanager:GetResourcePolicy'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.eks_external_secrets_iam_policy",
			"location": {
				"filename": "/github/workspace/eks/iam.tf",
				"start_line": 240,
				"end_line": 240
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'secretsmanager:GetResourcePolicy' on wildcarded resource 'arn:aws:secretsmanager:*:*:secret:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.eks_external_secrets_iam_policy",
			"location": {
				"filename": "/github/workspace/eks/iam.tf",
				"start_line": 240,
				"end_line": 240
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'route53:ListResourceRecordSets' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "data.aws_iam_policy_document.external_dns_iam_policy_document",
			"location": {
				"filename": "/github/workspace/eks/dependencies.tf",
				"start_line": 28,
				"end_line": 28
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-ec2-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/ec2/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.alb_sg_argo",
			"location": {
				"filename": "git::https:/github.com/terraform-aws-modules/terraform-aws-security-group?ref=badbab67cd0d7f976523fd44647e1ee9fb87001b/main.tf",
				"start_line": 658,
				"end_line": 665
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-ec2-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/ec2/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.alb_sg_argo",
			"location": {
				"filename": "git::https:/github.com/terraform-aws-modules/terraform-aws-security-group?ref=badbab67cd0d7f976523fd44647e1ee9fb87001b/main.tf",
				"start_line": 197,
				"end_line": 204
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-ec2-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/ec2/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.alb_sg_argo",
			"location": {
				"filename": "git::https:/github.com/terraform-aws-modules/terraform-aws-security-group?ref=badbab67cd0d7f976523fd44647e1ee9fb87001b/main.tf",
				"start_line": 197,
				"end_line": 204
			}
		},
		{
			"rule_id": "AVD-AWS-0052",
			"long_id": "aws-elb-drop-invalid-headers",
			"rule_description": "Load balancers should drop invalid headers",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "Invalid headers being passed through to the target of the load balance may exploit vulnerabilities",
			"resolution": "Set drop_invalid_header_fields to true",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/elb/drop-invalid-headers/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb#drop_invalid_header_fields"
			],
			"description": "Application load balancer is not set to drop invalid headers.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_lb.alb_argo[0]",
			"location": {
				"filename": "/github/workspace/eks-alb/alb-argo.tf",
				"start_line": 51,
				"end_line": 65
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:*' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ec2:*' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses wildcarded action 'ec2:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_iam_policy.github_actions_deploy_policy",
			"location": {
				"filename": "/github/workspace/iam-deploy/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0086",
			"long_id": "aws-s3-block-public-acls",
			"rule_description": "S3 Access block should block public ACL",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable blocking any PUT calls with a public ACL specified",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/s3/block-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls"
			],
			"description": "No public access block so not blocking public acls",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.this[0]",
			"location": {
				"filename": "/github/workspace/s3/main.tf",
				"start_line": 1,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0087",
			"long_id": "aws-s3-block-public-policy",
			"rule_description": "S3 Access block should block public policy",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Users could put a policy that allows public access",
			"resolution": "Prevent policies that allow public access being PUT",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/s3/block-public-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy"
			],
			"description": "No public access block so not blocking public policies",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.this[0]",
			"location": {
				"filename": "/github/workspace/s3/main.tf",
				"start_line": 1,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0088",
			"long_id": "aws-s3-enable-bucket-encryption",
			"rule_description": "Unencrypted S3 bucket.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "The bucket objects could be read if compromised",
			"resolution": "Configure bucket encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/s3/enable-bucket-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not have encryption enabled",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.this[0]",
			"location": {
				"filename": "/github/workspace/s3/main.tf",
				"start_line": 1,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0089",
			"long_id": "aws-s3-enable-bucket-logging",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/s3/enable-bucket-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket does not have logging enabled",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.this[0]",
			"location": {
				"filename": "/github/workspace/s3/main.tf",
				"start_line": 1,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0090",
			"long_id": "aws-s3-enable-versioning",
			"rule_description": "S3 Data should be versioned",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Deleted or modified data would not be recoverable",
			"resolution": "Enable versioning to protect against accidental/malicious removal or modification",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/s3/enable-versioning/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#versioning"
			],
			"description": "Bucket does not have versioning enabled",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.this[0]",
			"location": {
				"filename": "/github/workspace/s3/main.tf",
				"start_line": 1,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0132",
			"long_id": "aws-s3-encryption-customer-key",
			"rule_description": "S3 encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/s3/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not encrypt data with a customer managed key.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.this[0]",
			"location": {
				"filename": "/github/workspace/s3/main.tf",
				"start_line": 1,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0091",
			"long_id": "aws-s3-ignore-public-acls",
			"rule_description": "S3 Access Block should Ignore Public Acl",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable ignoring the application of public ACLs in PUT calls",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/s3/ignore-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls"
			],
			"description": "No public access block so not ignoring public acls",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.this[0]",
			"location": {
				"filename": "/github/workspace/s3/main.tf",
				"start_line": 1,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0093",
			"long_id": "aws-s3-no-public-buckets",
			"rule_description": "S3 Access block should restrict public bucket to limit access",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public buckets can be accessed by anyone",
			"resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/s3/no-public-buckets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡"
			],
			"description": "No public access block so not restricting public buckets",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.this[0]",
			"location": {
				"filename": "/github/workspace/s3/main.tf",
				"start_line": 1,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0094",
			"long_id": "aws-s3-specify-public-access-block",
			"rule_description": "S3 buckets should each define an aws_s3_bucket_public_access_block",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public access policies may be applied to sensitive data buckets",
			"resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/s3/specify-public-access-block/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket"
			],
			"description": "Bucket does not have a corresponding public access block.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "aws_s3_bucket.this[0]",
			"location": {
				"filename": "/github/workspace/s3/main.tf",
				"start_line": 1,
				"end_line": 8
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-ec2-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/ec2/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.alb_security_group",
			"location": {
				"filename": "terraform-aws-modules/security-group/aws/main.tf",
				"start_line": 658,
				"end_line": 665
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-ec2-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/ec2/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.alb_security_group",
			"location": {
				"filename": "terraform-aws-modules/security-group/aws/main.tf",
				"start_line": 197,
				"end_line": 204
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-ec2-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/ec2/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.alb_security_group",
			"location": {
				"filename": "terraform-aws-modules/security-group/aws/main.tf",
				"start_line": 197,
				"end_line": 204
			}
		},
		{
			"rule_id": "AVD-AWS-0102",
			"long_id": "aws-ec2-no-excessive-port-access",
			"rule_description": "An Network ACL rule allows ALL ports.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "All ports exposed for ingressing/egressing data",
			"resolution": "Set specific allowed ports",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/ec2/no-excessive-port-access/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule#to_port"
			],
			"description": "Network ACL rule allows access using ALL ports.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "git::https:/github.com/terraform-aws-modules/terraform-aws-vpc?ref=25322b6b6be69db6cca7f167d7b0e5327156a595/main.tf",
				"start_line": 906,
				"end_line": 906
			}
		},
		{
			"rule_id": "AVD-AWS-0102",
			"long_id": "aws-ec2-no-excessive-port-access",
			"rule_description": "An Network ACL rule allows ALL ports.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "All ports exposed for ingressing/egressing data",
			"resolution": "Set specific allowed ports",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/ec2/no-excessive-port-access/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule#to_port"
			],
			"description": "Network ACL rule allows access using ALL ports.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "git::https:/github.com/terraform-aws-modules/terraform-aws-vpc?ref=25322b6b6be69db6cca7f167d7b0e5327156a595/main.tf",
				"start_line": 889,
				"end_line": 889
			}
		},
		{
			"rule_id": "AVD-AWS-0102",
			"long_id": "aws-ec2-no-excessive-port-access",
			"rule_description": "An Network ACL rule allows ALL ports.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "All ports exposed for ingressing/egressing data",
			"resolution": "Set specific allowed ports",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/ec2/no-excessive-port-access/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule#to_port"
			],
			"description": "Network ACL rule allows access using ALL ports.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "git::https:/github.com/terraform-aws-modules/terraform-aws-vpc?ref=25322b6b6be69db6cca7f167d7b0e5327156a595/main.tf",
				"start_line": 339,
				"end_line": 339
			}
		},
		{
			"rule_id": "AVD-AWS-0102",
			"long_id": "aws-ec2-no-excessive-port-access",
			"rule_description": "An Network ACL rule allows ALL ports.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "All ports exposed for ingressing/egressing data",
			"resolution": "Set specific allowed ports",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/ec2/no-excessive-port-access/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule#to_port"
			],
			"description": "Network ACL rule allows access using ALL ports.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "git::https:/github.com/terraform-aws-modules/terraform-aws-vpc?ref=25322b6b6be69db6cca7f167d7b0e5327156a595/main.tf",
				"start_line": 322,
				"end_line": 322
			}
		},
		{
			"rule_id": "AVD-AWS-0102",
			"long_id": "aws-ec2-no-excessive-port-access",
			"rule_description": "An Network ACL rule allows ALL ports.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "All ports exposed for ingressing/egressing data",
			"resolution": "Set specific allowed ports",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/ec2/no-excessive-port-access/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule#to_port"
			],
			"description": "Network ACL rule allows access using ALL ports.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "git::https:/github.com/terraform-aws-modules/terraform-aws-vpc?ref=25322b6b6be69db6cca7f167d7b0e5327156a595/main.tf",
				"start_line": 220,
				"end_line": 220
			}
		},
		{
			"rule_id": "AVD-AWS-0102",
			"long_id": "aws-ec2-no-excessive-port-access",
			"rule_description": "An Network ACL rule allows ALL ports.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "All ports exposed for ingressing/egressing data",
			"resolution": "Set specific allowed ports",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/ec2/no-excessive-port-access/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule#to_port"
			],
			"description": "Network ACL rule allows access using ALL ports.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "git::https:/github.com/terraform-aws-modules/terraform-aws-vpc?ref=25322b6b6be69db6cca7f167d7b0e5327156a595/main.tf",
				"start_line": 203,
				"end_line": 203
			}
		},
		{
			"rule_id": "AVD-AWS-0105",
			"long_id": "aws-ec2-no-public-ingress-acl",
			"rule_description": "An ingress Network ACL rule allows specific ports from /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The ports are exposed for ingressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/ec2/no-public-ingress-acl/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule#cidr_block"
			],
			"description": "Network ACL rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "git::https:/github.com/terraform-aws-modules/terraform-aws-vpc?ref=25322b6b6be69db6cca7f167d7b0e5327156a595/main.tf",
				"start_line": 890,
				"end_line": 890
			}
		},
		{
			"rule_id": "AVD-AWS-0105",
			"long_id": "aws-ec2-no-public-ingress-acl",
			"rule_description": "An ingress Network ACL rule allows specific ports from /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The ports are exposed for ingressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/ec2/no-public-ingress-acl/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule#cidr_block"
			],
			"description": "Network ACL rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "git::https:/github.com/terraform-aws-modules/terraform-aws-vpc?ref=25322b6b6be69db6cca7f167d7b0e5327156a595/main.tf",
				"start_line": 323,
				"end_line": 323
			}
		},
		{
			"rule_id": "AVD-AWS-0105",
			"long_id": "aws-ec2-no-public-ingress-acl",
			"rule_description": "An ingress Network ACL rule allows specific ports from /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The ports are exposed for ingressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/ec2/no-public-ingress-acl/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/network_acl_rule#cidr_block"
			],
			"description": "Network ACL rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "git::https:/github.com/terraform-aws-modules/terraform-aws-vpc?ref=25322b6b6be69db6cca7f167d7b0e5327156a595/main.tf",
				"start_line": 204,
				"end_line": 204
			}
		},
		{
			"rule_id": "AVD-AWS-0178",
			"long_id": "aws-ec2-require-vpc-flow-logs-for-all-vpcs",
			"rule_description": "VPC Flow Logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. After you've created a flow log, you can view and retrieve its data in Amazon CloudWatch Logs. It is recommended that VPC Flow Logs be enabled for packet \"Rejects\" for VPCs.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Without VPC flow logs, you risk not having enough information about network traffic flow to investigate incidents or identify security issues.",
			"resolution": "Enable flow logs for VPC",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.13/checks/aws/ec2/require-vpc-flow-logs-for-all-vpcs/"
			],
			"description": "VPC Flow Logs is not enabled for VPC ",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "git::https:/github.com/terraform-aws-modules/terraform-aws-vpc?ref=25322b6b6be69db6cca7f167d7b0e5327156a595/main.tf",
				"start_line": 28,
				"end_line": 51
			}
		}
	]
}
